from django.http import JsonResponse, HttpResponse
from django.db import connection
from django.views.decorators.csrf import csrf_exempt
import json

# Create your views here.
@csrf_exempt
def getUser(request):
    if request.method != 'GET':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    user_id = json_data['user_id']
    cursor = connection.cursor()
    cursor.execute('SELECT * FROM users WHERE user_id = ' + str(user_id) + ';')
    rows = cursor.fetchone()

    response = {"user_id": rows[0], 
          "first_name": rows[1],
           "last_name" : rows[2],
           "year_of_birth" : rows[3],
           "month_of_birth" : rows[4],
           "day_of_birth" : rows[5],
           "username" : rows[6],
           "password" : rows[7],
           "charging_since" : rows[8],
           "description" : rows[9],}
    
    #user_id | first_name | last_name | year_of_birth | month_of_birth | day_of_birth |  username  |   password    | charging_since |              description
    #response = {}
    #response['users'] = rows
    return JsonResponse(response)

@csrf_exempt
def getHost(request):
    if request.method != 'GET':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    host_id = json_data['host_id']
    cursor = connection.cursor()
    cursor.execute('SELECT * FROM hosts WHERE host_id = ' + str(host_id) + ';')
    rows = cursor.fetchall()
    response = {}
    response['hosts'] = rows
    return JsonResponse(response)


@csrf_exempt
def getDriver(request):
    if request.method != 'GET':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    driver_id = json_data['driver_id']
    cursor = connection.cursor()
    cursor.execute('SELECT * FROM drivers WHERE driver_id = ' + str(driver_id) + ';')
    rows = cursor.fetchall()
    response = {}
    response['drivers'] = rows
    return JsonResponse(response)


@csrf_exempt
def getDrive(request):
    if request.method != 'GET':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    driver_id = json_data['driver_id']
    cursor = connection.cursor()
    cursor.execute('SELECT * FROM drives WHERE driver_id = ' + str(driver_id) + ';')
    rows = cursor.fetchall()
    response = {}
    response['drives'] = rows
    return JsonResponse(response)


@csrf_exempt
def getAddCharger(request):
    if request.method != 'GET':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    user_id = json_data['user_id']
    cursor = connection.cursor()
    cursor.execute('SELECT * FROM add_charger WHERE user_id = ' + str(user_id) + ';')
    rows = cursor.fetchall()

    response = {}
    response['users'] = rows
    return JsonResponse(response)

#def getLocalChargers(request):
#    if request.method != 'GET':
#        return HttpResponse(status=404)
#NOTDONE

#    json_data = json.loads(request.body)
#    user_id = json_data['user_id']
#    cursor = connection.cursor()
#    cursor.execute('SELECT * FROM add_charger WHERE user_id = ' + str(user_id) + ';')
#    rows = cursor.fetchall()
#
#    response = {}
#    response['users'] = rows
#    return JsonResponse(response)

#def getChargerWindow(request):
#    if request.method != 'GET':
#        return HttpResponse(status=404)
#NOTDONE
#    json_data = json.loads(request.body)
#    user_id = json_data['user_id']
#    cursor = connection.cursor()
#    cursor.execute('SELECT * FROM add_charger WHERE user_id = ' + str(user_id) + ';')
#    rows = cursor.fetchall()
#
#    response = {}
#    response['users'] = rows
#    return JsonResponse(response)


@csrf_exempt
def getReview(request):
    if request.method != 'GET':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    review_id = json_data['review_id']
    cursor = connection.cursor()
    cursor.execute('SELECT * FROM reviews WHERE review_id = ' + str(review_id) + ';')
    rows = cursor.fetchall()

    response = {}
    response['reviews'] = rows
    return JsonResponse(response)

@csrf_exempt
def getPhoto(request):
    if request.method != 'GET':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    photo_id = json_data['photo_id']
    cursor = connection.cursor()
    cursor.execute('SELECT * FROM photos WHERE photo_id = ' + str(photo_id) + ';')
    rows = cursor.fetchall()

    response = {}
    response['photos'] = rows
    return JsonResponse(response)

@csrf_exempt
def getPostPhoto(request):
    if request.method != 'GET':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    photo_id = json_data['photo_id']
    cursor = connection.cursor()
    cursor.execute('SELECT * FROM posts_photos WHERE photo_id = ' + str(photo_id) + ';')
    rows = cursor.fetchall()

    response = {}
    response['posts_photos'] = rows
    return JsonResponse(response)

@csrf_exempt
def getVehicle(request):
    if request.method != 'GET':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    lics_number = json_data['lics_number']
    cursor = connection.cursor()
    cursor.execute('SELECT * FROM vehicle WHERE lics_number = ' + str(lics_number) + ';')
    rows = cursor.fetchall()
    print("Hello World")
    response = {}
    response['vehicle'] = rows
    return JsonResponse(response)

@csrf_exempt
def postUser(request):
    if request.method != 'POST':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    first_name = json_data['first_name']
    username = json_data['username']
    last_name = json_data['last_name']
    password = json_data['password']
    user_id = json_data['user_id']
    year_of_birth = json_data['year_of_birth']
    month_of_birth = json_data['month_of_birth']
    day_of_birth = json_data['day_of_birth']
    charging_since = json_data['charging_since']
    description = json_data['description']

    cursor = connection.cursor()
    cursor.execute('INSERT INTO users (user_id, first_name, last_name, year_of_birth, month_of_birth, day_of_birth, username, password, charging_since, description) VALUES '
                  '(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s);', (user_id, first_name, last_name, year_of_birth, month_of_birth, day_of_birth, username, password, charging_since, description))

    return JsonResponse({})


@csrf_exempt
def postHost(request):
    if request.method != 'POST':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)

    host_id = json_data['host_id']

    cursor = connection.cursor()
    cursor.execute('INSERT INTO hosts (host_id) VALUES '
                   '(%s);', (host_id))

    return JsonResponse({}) 

@csrf_exempt
def postDriver(request):
    if request.method != 'POST':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    driver_id = json_data['driver_id']

    cursor = connection.cursor()
    cursor.execute('INSERT INTO drivers (driver_id) VALUES '
                   '(%s);', (driver_id))

    return JsonResponse({})


@csrf_exempt
def postDrive(request):
    if request.method != 'POST':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    driver_id = json_data['driver_id']
    lics_number = json_data['lics_number']

    cursor = connection.cursor()
    cursor.execute('INSERT INTO drives (lics_number, driver_id) VALUES '
                   '(%s, %s);', (lics_number, driver_id))

    return JsonResponse({})


@csrf_exempt
def postAddCharger(request):
    if request.method != 'POST':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    user_id = json_data['user_id']
    cid = json_data['cid']

    cursor = connection.cursor()
    cursor.execute('INSERT INTO add_charger (user_id, cid) VALUES '
                   '(%s, %s);', (user_id, cid))

    return JsonResponse({})

@csrf_exempt
def postCharger(request):
    if request.method != 'POST':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    user_id = json_data['user_id']
    cid = json_data['cid']
    available = json_data['available']
    start_time_availability = json_data['start_time_availability']
    end_time_availability = json_data['end_time_availability']
    charger_type = json_data['charger_type']
    price = json_data['price']
    street_address = json_data['street_address']
    city_address = json_data['city_address']
    state_address = json_data['state_address']
    zipcode_address = json_data['zipcode_address']
    latitude = json_data['latitude']
    longitude = json_data['longitude']

    cursor = connection.cursor()
    cursor.execute('INSERT INTO chargers (cid, available, start_time_availability, end_time_availability, charger_type, price, street_address, city_address, state_address, zipcode_address, latitude, longitude ) VALUES '
                   '(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s);', (cid, available, start_time_availability, end_time_availability, charger_type, price, street_address, city_address, state_address, zipcode_address, latitude, longitude))

    return JsonResponse({})

#@csrf_exempt
#def postChargerAt(request):
#    if request.method != 'POST':
#        return HttpResponse(status=404)
#NOTDONE
#    json_data = json.loads(request.body)
#    user_id = json_data['user_id']
#    cid = json_data['cid']
#
#    cursor = connection.cursor()
#    cursor.execute('INSERT INTO add_charger (user_id, cid) VALUES '
#                   '(%s, %s);', (user_id, cid))
#
#    return JsonResponse({})

@csrf_exempt
def postReview(request):
    if request.method != 'POST':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    review_id = json_data['review_id']
    review_date = json_data['review_date']
    stars = json_data['stars']
    subject = json_data['subject']
    message = json_data['message']
    receiving_review_type = json_data['receiving_review_type']
    host_id = json_data['host_id']
    driver_id = json_data['driver_id']

    cursor = connection.cursor()
    cursor.execute('INSERT INTO reviews (review_id, review_date, stars, subject, message, receiving_review_type, host_id, driver_id) VALUES '
                   '(%s, %s, %s, %s, %s, %s, %s, %s);', (review_id, review_date,
                       stars, subject, message, receiving_review_type, host_id,
                       driver_id))

    return JsonResponse({})

@csrf_exempt
def postPhoto(request):
    if request.method != 'POST':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    photo_id = json_data['photo_id']
    img_url = json_data['img_url']

    cursor = connection.cursor()
    cursor.execute('INSERT INTO photos (photo_id, img_url) VALUES '
                   '(%s, %s);', (photo_id, img_url))

    return JsonResponse({})

@csrf_exempt
def postPostPhoto(request):
    if request.method != 'POST':
        return HttpResponse(status=404)
    json_data = json.loads(request.body)
    photo_id = json_data['photo_id']
    charger_id = json_data['charger_id']

    cursor = connection.cursor()
    cursor.execute('INSERT INTO posts_photos (photo_id, charger_id) VALUES '
                   '(%s, %s);', (photo_id, charger_id))

    return JsonResponse({})

@csrf_exempt
def postVehicle(request):
    if request.method != 'POST':
        return HttpResponse(status=404)

    json_data = json.loads(request.body)
    lics_number = json_data['lics_number']
    model = json_data['model']
    color = json_data['color']

    cursor = connection.cursor()
    cursor.execute('INSERT INTO vehicle (lics_number, model, color) VALUES '
                   '(%s, %s, %s);', (lics_number, model, color))

    return JsonResponse({})
